//вроде все исправила, кроме "fixit: Структура достаточно большая ... следует передать по константной ссылке" - не поняла, как это сделать
// но и без этого все работает
#include <string>
#include <iostream>
#include <ctype.h>
#include <map>
#include <fstream>
#include <algorithm>
#include <vector>

using namespace std;

struct Statistics
{
	int count;
	string word;
};
bool comp(Statistics s1, Statistics s2)
{
	return (s1.count > s2.count);
}

string prepare(string text)
{
	int i = 0;
	int size = text.length();
	while (i < size)
	{
		if (ispunct(text[i])) text[i] = ' ';
		if (text[i] <= 'Z' && text[i] >= 'A')
			text[i] = text[i] - ('Z' - 'z');
		i++;
	}
	i = 0;
	while ((i < size) && (text[i] != ' ')) i++;
	string w;
	for (int k = 0; k <= i - 1; k++)
		w = w + text[k];
	return w;
}
int main()
{
	int i, N; // N - кол-во самых часто встречающихся слов, которое мы задаем сами
	cin >> N;
	map <string, int> m;
	std::map<string, int>::iterator it;
	ifstream fin;
	fin.open("fin.txt", ios::in);
	ofstream fout;
	fout.open("fout.txt", ios::out);
	int NumOfWordsRead = 0;
	if (fin.is_open())
	{
		string original_text;
		while (!fin.eof())
		{
			fin >> original_text;
			NumOfWordsRead++;
			string word = prepare(original_text);
			if (NumOfWordsRead > 1)
			{
				it = m.find(word);
				if (it != m.end())
					it->second++;
				else
					m.insert(pair<string, int>(word, 1));

			}
		}
	}
	vector <Statistics> s(m.size());
	int j = 0;
	for (map <string, int>::iterator it = m.begin(); it != m.end(); it++)
	{
		s[j].count = it->second;
		s[j].word = it->first;
		j++;
	}
	sort(s.begin(), s.end(), comp);
	fout << "Топ-" << N << ' ' << "самых популярных слов в тексте:" << endl;
	for (i = 0; i < N; i++)
	{
		fout << "Слово: '" << s[i].word << "' употреблено " << s[i].count << " раз(a)."<< endl;
	}
	fin.close();
	fout.close();
	return 0;
}
